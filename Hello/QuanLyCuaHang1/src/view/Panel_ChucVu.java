package view;

import dao.ChucVuDAO;
import java.awt.Font;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;
import model.ChucVu;
import model.Quyen;

/**
 *
 * @author Hoang
 */
public class Panel_ChucVu extends javax.swing.JPanel {

    /**
     * Creates new form panel_san_pham
     */
    public Panel_ChucVu() {
        initComponents();
    }

    public void setdata(){
        modelChucVu.addColumn("Mã Chức Vụ");
        modelChucVu.addColumn("Tên Chức Vụ");
        modelChucVu.addColumn("Ghi Chú");
        
        tbl_ChucVu.setModel(modelChucVu);
        
        tbl_ChucVu.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            indexChucVu = tbl_ChucVu.getSelectedRow();
            if(indexChucVu>=0 && !isEditable){
                txt_maChucVu.setText(tbl_ChucVu.getValueAt(indexChucVu, 0).toString());
                txt_tenChucVu.setText(tbl_ChucVu.getValueAt(indexChucVu, 1).toString());
                txt_ghiChu.setText(tbl_ChucVu.getValueAt(indexChucVu, 2)==null?"":tbl_ChucVu.getValueAt(indexChucVu, 2).toString());
                loadQuyen();
            } else if (isUpdate){
                
            } else if (isEditable){
                
            }
        });
        
        loadChucVu();
        
        setEditable(false);
        txt_maChucVu.setEditable(false);
        try {
            if(modelChucVu.getRowCount()>0) tbl_ChucVu.setRowSelectionInterval(0, 0);
        } catch (Exception e) {}
    }
    
    private void loadChucVu(){
        setEditable(false);
        isUpdate = false;
        listChucVu.clear();
        modelChucVu.setRowCount(0);
        
        listChucVu = chucVuDAO.getListChucVu();
        listChucVu.forEach(chucVu -> {
            Vector row = new Vector();
            row.add(chucVu.getMaChucVu());
            row.add(chucVu.getTenChucVu());
            row.add(chucVu.getGhiChu());
            modelChucVu.addRow(row);
        });
        
        if(modelChucVu.getRowCount()>0){
            try {
                tbl_ChucVu.setRowSelectionInterval(0, 0);
            } catch (Exception e) {}
        }
    }
    
    private void loadQuyen(){
        maChucVu = Integer.valueOf(txt_maChucVu.getText());
        List<Quyen> listQuyen = chucVuDAO.getQuyenByMaChucVu(maChucVu);
        clearCheckbox();
        listQuyen.forEach(quyen -> {
            switch (quyen.getMaQuyen()) {
                case "QL_BAN_HANG" :
                    chk_QL_BAN_HANG.setSelected(true);
                    break;
                case "QL_DOANH_THU" :
                    chk_QL_DOANH_THU.setSelected(true);
                    break;
                case "QL_KHACH_HANG" :
                    chk_QL_KHACH_HANG.setSelected(true);
                    break;
                case "QL_NHA_PHAN_PHOI" :
                    chk_QL_NHA_PHAN_PHOI.setSelected(true);
                    break;
                case "QL_NHAN_VIEN" :
                    chk_QL_NHAN_VIEN.setSelected(true);
                    break;
                case "QL_NHAP_HANG" :
                    chk_QL_NHAP_HANG.setSelected(true);
                    break;
                case "QL_SAN_PHAM" :
                    chk_QL_SAN_PHAM.setSelected(true);
                    break;
                case "QL_CHUC_VU" :
                    break;
                default:
                    System.out.println("default");
                    System.out.println(quyen.getMaQuyen());
                    break;
            }
        });
    }
    
    private void clearCheckbox(){
        chk_QL_BAN_HANG.setSelected(false);
        chk_QL_DOANH_THU.setSelected(false);
        chk_QL_KHACH_HANG.setSelected(false);
        chk_QL_NHAN_VIEN.setSelected(false);
        chk_QL_NHAP_HANG.setSelected(false);
        chk_QL_NHA_PHAN_PHOI.setSelected(false);
        chk_QL_SAN_PHAM.setSelected(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_ChucVu = new javax.swing.JTable();
        txt_tenChucVu = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btn_boqua = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_ghiChu = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        btn_them = new javax.swing.JButton();
        txt_maChucVu = new javax.swing.JTextField();
        btn_sua = new javax.swing.JButton();
        btn_xoa = new javax.swing.JButton();
        btn_luu = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        chk_QL_BAN_HANG = new javax.swing.JCheckBox();
        chk_QL_DOANH_THU = new javax.swing.JCheckBox();
        chk_QL_KHACH_HANG = new javax.swing.JCheckBox();
        chk_QL_NHA_PHAN_PHOI = new javax.swing.JCheckBox();
        chk_QL_NHAN_VIEN = new javax.swing.JCheckBox();
        chk_QL_NHAP_HANG = new javax.swing.JCheckBox();
        chk_QL_SAN_PHAM = new javax.swing.JCheckBox();

        tbl_ChucVu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã Chức Vụ", "Tên Chức Vụ", "Ghi Chú"
            }
        ));
        jScrollPane1.setViewportView(tbl_ChucVu);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Mã Chức Vụ");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Tên Chức Vụ");

        btn_boqua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icon/boqua.png"))); // NOI18N
        btn_boqua.setText("Bỏ Qua");
        btn_boqua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_boquaActionPerformed(evt);
            }
        });

        txt_ghiChu.setColumns(20);
        txt_ghiChu.setRows(5);
        jScrollPane2.setViewportView(txt_ghiChu);

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("Ghi Chú");

        btn_them.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icon/them.png"))); // NOI18N
        btn_them.setText("Tạo Mới");
        btn_them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themActionPerformed(evt);
            }
        });

        btn_sua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icon/sua.png"))); // NOI18N
        btn_sua.setText("Sửa");
        btn_sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suaActionPerformed(evt);
            }
        });

        btn_xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icon/xoa.png"))); // NOI18N
        btn_xoa.setText("Xóa");
        btn_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaActionPerformed(evt);
            }
        });

        btn_luu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icon/luu.png"))); // NOI18N
        btn_luu.setText("Lưu");
        btn_luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_luuActionPerformed(evt);
            }
        });

        chk_QL_BAN_HANG.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        chk_QL_BAN_HANG.setText("Quản Lý Bán Hàng");
        chk_QL_BAN_HANG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_QL_BAN_HANGActionPerformed(evt);
            }
        });

        chk_QL_DOANH_THU.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        chk_QL_DOANH_THU.setText("Quản Lý Doanh Thu");
        chk_QL_DOANH_THU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_QL_DOANH_THUActionPerformed(evt);
            }
        });

        chk_QL_KHACH_HANG.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        chk_QL_KHACH_HANG.setText("Quản Lý Khách Hàng");
        chk_QL_KHACH_HANG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_QL_KHACH_HANGActionPerformed(evt);
            }
        });

        chk_QL_NHA_PHAN_PHOI.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        chk_QL_NHA_PHAN_PHOI.setText("Quản Lý Nhà Phân Phối");
        chk_QL_NHA_PHAN_PHOI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_QL_NHA_PHAN_PHOIActionPerformed(evt);
            }
        });

        chk_QL_NHAN_VIEN.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        chk_QL_NHAN_VIEN.setText("Quản Lý Nhân Viên");
        chk_QL_NHAN_VIEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_QL_NHAN_VIENActionPerformed(evt);
            }
        });

        chk_QL_NHAP_HANG.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        chk_QL_NHAP_HANG.setText("Quản Lý Nhập Hàng");
        chk_QL_NHAP_HANG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_QL_NHAP_HANGActionPerformed(evt);
            }
        });

        chk_QL_SAN_PHAM.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        chk_QL_SAN_PHAM.setText("Quản Lý Sản Phẩm");
        chk_QL_SAN_PHAM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_QL_SAN_PHAMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chk_QL_KHACH_HANG)
                            .addComponent(chk_QL_NHA_PHAN_PHOI)
                            .addComponent(chk_QL_NHAP_HANG)
                            .addComponent(chk_QL_BAN_HANG)
                            .addComponent(chk_QL_NHAN_VIEN))
                        .addGap(46, 155, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chk_QL_SAN_PHAM)
                            .addComponent(chk_QL_DOANH_THU))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(chk_QL_BAN_HANG)
                .addGap(12, 12, 12)
                .addComponent(chk_QL_NHAP_HANG)
                .addGap(12, 12, 12)
                .addComponent(chk_QL_SAN_PHAM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chk_QL_NHA_PHAN_PHOI)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chk_QL_KHACH_HANG)
                .addGap(12, 12, 12)
                .addComponent(chk_QL_DOANH_THU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chk_QL_NHAN_VIEN)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_tenChucVu, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addComponent(txt_maChucVu, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(102, 102, 102)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_them, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_sua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_xoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btn_luu, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_boqua, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(317, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(btn_them, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_sua, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_xoa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_luu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_boqua, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txt_maChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txt_tenChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themActionPerformed
        // TODO add your handling code here:
        temp_indexChucVu = indexChucVu;
        setEditable(true);
        txt_maChucVu.setText("");
        txt_tenChucVu.requestFocus();
        txt_tenChucVu.setText("");
        txt_ghiChu.setText("");
        clearCheckbox();
        tbl_ChucVu.clearSelection();
    }//GEN-LAST:event_btn_themActionPerformed

    private void btn_suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suaActionPerformed
        // TODO add your handling code here:
        temp_indexChucVu = indexChucVu;
        setEditable(true);
        if(txt_maChucVu.getText().equals("1")){
            isChkEditable = false;
        }
        isUpdate = true;
        txt_tenChucVu.requestFocus();
    }//GEN-LAST:event_btn_suaActionPerformed

    private void btn_xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaActionPerformed
        // TODO add your handling code here:
        maChucVu = Integer.valueOf(txt_maChucVu.getText());
        if(maChucVu == 1){
            JOptionPane.showMessageDialog(this, "Không thể xóa Chức vụ " + txt_tenChucVu.getText());
            
        } else if(chucVuDAO.checkExistChucVu(maChucVu)){
            JOptionPane.showMessageDialog(this, "Không thể xóa Chức vụ đang có Nhân viên");
        
        } else {
            temp_indexChucVu = indexChucVu;
            JLabel confirm = new JLabel("Xác nhận xóa chức vụ "+txt_tenChucVu.getText()+"?");
            confirm.setFont(new Font("Dialog", Font.PLAIN, 17));
            int a = JOptionPane.showConfirmDialog(this, confirm, "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (a == JOptionPane.YES_OPTION) {
                maChucVu = txt_maChucVu.getText().trim().matches("[0-9]+") ? Integer.valueOf(txt_maChucVu.getText()) : -1;
                if (indexChucVu >= 0) {
                    try {
                        chucVuDAO.xoa(maChucVu);
                        loadChucVu();
                        if(temp_indexChucVu == 0) tbl_ChucVu.setRowSelectionInterval(0, 0);
                        else tbl_ChucVu.setRowSelectionInterval(temp_indexChucVu-1, temp_indexChucVu-1);

                    } catch(IllegalArgumentException iea){
                    } catch (Exception e4){
                        System.out.println(e4);
                    }
                }
            }
        }
        
    }//GEN-LAST:event_btn_xoaActionPerformed

    private void btn_luuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_luuActionPerformed
        // TODO add your handling code here:
        if (checkValidate()) {
            if (!isUpdate) {
                try {
                    chucVuDAO.them(tenChucVu, ghiChu, listMaQuyen);
                    loadChucVu();
                    tbl_ChucVu.setRowSelectionInterval(modelChucVu.getRowCount()-1, modelChucVu.getRowCount()-1);
                    

                } catch (IllegalArgumentException iae){
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Lỗi thêm chức vụ");
                    System.out.println(e);
                }
            } else {
                try {
                    chucVuDAO.sua(maChucVu, tenChucVu, ghiChu, listMaQuyen);
                    loadChucVu();
                    tbl_ChucVu.clearSelection();
                    tbl_ChucVu.setRowSelectionInterval(temp_indexChucVu, temp_indexChucVu);

                } catch (IllegalArgumentException iae){
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Lỗi sửa chức vụ");
                    System.out.println(e);

                }
                
            }
            
        }
    }//GEN-LAST:event_btn_luuActionPerformed

    private void btn_boquaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_boquaActionPerformed
        // TODO add your handling code here:
        setEditable(false);
        isUpdate = false;
        try {
            tbl_ChucVu.clearSelection();
            tbl_ChucVu.setRowSelectionInterval(temp_indexChucVu, temp_indexChucVu);
        } catch (Exception e) {}
    }//GEN-LAST:event_btn_boquaActionPerformed

    private void chk_QL_BAN_HANGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_QL_BAN_HANGActionPerformed
        // TODO add your handling code here:
        if(!isChkEditable) chk_QL_BAN_HANG.setSelected(!chk_QL_BAN_HANG.isSelected());
    }//GEN-LAST:event_chk_QL_BAN_HANGActionPerformed

    private void chk_QL_NHAP_HANGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_QL_NHAP_HANGActionPerformed
        // TODO add your handling code here:
        if(!isChkEditable) chk_QL_NHAP_HANG.setSelected(!chk_QL_NHAP_HANG.isSelected());
    }//GEN-LAST:event_chk_QL_NHAP_HANGActionPerformed

    private void chk_QL_SAN_PHAMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_QL_SAN_PHAMActionPerformed
        // TODO add your handling code here:
        if(!isChkEditable) chk_QL_SAN_PHAM.setSelected(!chk_QL_SAN_PHAM.isSelected());
    }//GEN-LAST:event_chk_QL_SAN_PHAMActionPerformed

    private void chk_QL_NHA_PHAN_PHOIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_QL_NHA_PHAN_PHOIActionPerformed
        // TODO add your handling code here:
        if(!isChkEditable) chk_QL_NHA_PHAN_PHOI.setSelected(!chk_QL_NHA_PHAN_PHOI.isSelected());
    }//GEN-LAST:event_chk_QL_NHA_PHAN_PHOIActionPerformed

    private void chk_QL_KHACH_HANGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_QL_KHACH_HANGActionPerformed
        // TODO add your handling code here:
        if(!isChkEditable) chk_QL_KHACH_HANG.setSelected(!chk_QL_KHACH_HANG.isSelected());
    }//GEN-LAST:event_chk_QL_KHACH_HANGActionPerformed

    private void chk_QL_DOANH_THUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_QL_DOANH_THUActionPerformed
        // TODO add your handling code here:
        if(!isChkEditable) chk_QL_DOANH_THU.setSelected(!chk_QL_DOANH_THU.isSelected());
    }//GEN-LAST:event_chk_QL_DOANH_THUActionPerformed

    private void chk_QL_NHAN_VIENActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_QL_NHAN_VIENActionPerformed
        // TODO add your handling code here:
        if(!isChkEditable) chk_QL_NHAN_VIEN.setSelected(!chk_QL_NHAN_VIEN.isSelected());
    }//GEN-LAST:event_chk_QL_NHAN_VIENActionPerformed

    private boolean checkValidate() {
        maChucVu = txt_maChucVu.getText().trim().matches("[0-9]+") ? Integer.valueOf(txt_maChucVu.getText()) : -1;
        tenChucVu = txt_tenChucVu.getText().trim();
        ghiChu = txt_ghiChu.getText().trim();
        
        if(tenChucVu.isEmpty()){
            JOptionPane.showMessageDialog(this, "Chưa nhập Tên chức vụ");
            txt_tenChucVu.requestFocus();
            return false;
        }
        if(tenChucVu.length()>50){
            JOptionPane.showMessageDialog(this, "Tên chức vụ phải nhỏ hơn 50 kí tự");
            txt_tenChucVu.requestFocus();
            return false;
        }
        if(ghiChu.length()>100){
            JOptionPane.showMessageDialog(this, "Ghi chú phải nhỏ hơn 100 kí tự");
            txt_ghiChu.requestFocus();
            return false;
        }
        
        boolean isChecked = false;
        listMaQuyen.clear();
        if(chk_QL_BAN_HANG.isSelected()){
            listMaQuyen.add("QL_BAN_HANG");
            isChecked = true;
        }
        if(chk_QL_DOANH_THU.isSelected()){
            listMaQuyen.add("QL_DOANH_THU");
            isChecked = true;
        }
        if(chk_QL_KHACH_HANG.isSelected()){
            listMaQuyen.add("QL_KHACH_HANG");
            isChecked = true;
        }
        if(chk_QL_NHA_PHAN_PHOI.isSelected()){
            listMaQuyen.add("QL_NHA_PHAN_PHOI");
            isChecked = true;
        }
        if(chk_QL_NHAN_VIEN.isSelected()){
            listMaQuyen.add("QL_NHAN_VIEN");
            isChecked = true;
        }
        if(chk_QL_NHAP_HANG.isSelected()){
            listMaQuyen.add("QL_NHAP_HANG");
            isChecked = true;
        }
        if(chk_QL_SAN_PHAM.isSelected()){
            listMaQuyen.add("QL_SAN_PHAM");
            isChecked = true;
        } 
        if(!isChecked){
            JOptionPane.showMessageDialog(this, "Chưa chọn Quyền cho Chức Vụ");
            return false;
        }
        
        return true;
    }
    
    private void setEditable(boolean isEditable) {
            this.isEditable = isEditable;
            this.isChkEditable = isEditable;

            btn_them.setEnabled(!isEditable);
            btn_sua.setEnabled(!isEditable);
            btn_xoa.setEnabled(!isEditable);
            btn_luu.setEnabled(isEditable);
            btn_boqua.setEnabled(isEditable);

            txt_tenChucVu.setEditable(isEditable);
            txt_ghiChu.setEditable(isEditable);

    }
    
    DefaultTableModel modelChucVu = new DefaultTableModel();
    
    List<ChucVu> listChucVu = new ArrayList<>();
    List<String> listMaQuyen = new ArrayList<>();
    
    ChucVuDAO chucVuDAO = new ChucVuDAO();
    
    int indexChucVu = -1;
    int temp_indexChucVu = -1;

    boolean isEditable = false;
    boolean isChkEditable = false;
    boolean isUpdate = false;
    
    private int maChucVu;
    private String tenChucVu;
    private String ghiChu;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_boqua;
    private javax.swing.JButton btn_luu;
    private javax.swing.JButton btn_sua;
    private javax.swing.JButton btn_them;
    private javax.swing.JButton btn_xoa;
    private javax.swing.JCheckBox chk_QL_BAN_HANG;
    private javax.swing.JCheckBox chk_QL_DOANH_THU;
    private javax.swing.JCheckBox chk_QL_KHACH_HANG;
    private javax.swing.JCheckBox chk_QL_NHAN_VIEN;
    private javax.swing.JCheckBox chk_QL_NHAP_HANG;
    private javax.swing.JCheckBox chk_QL_NHA_PHAN_PHOI;
    private javax.swing.JCheckBox chk_QL_SAN_PHAM;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbl_ChucVu;
    private javax.swing.JTextArea txt_ghiChu;
    private javax.swing.JTextField txt_maChucVu;
    private javax.swing.JTextField txt_tenChucVu;
    // End of variables declaration//GEN-END:variables
}
