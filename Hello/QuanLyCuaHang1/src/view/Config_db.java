
package view;

import utils.DBUtils;
import java.awt.Font;
import java.awt.HeadlessException;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.SQLException;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Hoang
 */
public class Config_db extends javax.swing.JFrame {

    /** Creates new form config_db */
    public Config_db() {
        initComponents();
        setLocationRelativeTo(null);
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_dbUsername = new javax.swing.JTextField();
        txt_dbName = new javax.swing.JTextField();
        btn_dbConnect = new javax.swing.JButton();
        btn_dbExit = new javax.swing.JButton();
        txt_dbPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Config Database");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel1.setText("Tên Database");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel2.setText("Username");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel3.setText("Password");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel4.setText("CẤU HÌNH DATABASE");

        txt_dbUsername.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txt_dbUsername.setText("sa");

        txt_dbName.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txt_dbName.setText("QuanLyCuaHang");

        btn_dbConnect.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        btn_dbConnect.setText("Cập nhập");
        btn_dbConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dbConnectActionPerformed(evt);
            }
        });

        btn_dbExit.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        btn_dbExit.setText("Thoát ứng dụng");
        btn_dbExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dbExitActionPerformed(evt);
            }
        });

        txt_dbPassword.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(2, 2, 2)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btn_dbConnect, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_dbExit))
                            .addComponent(txt_dbName)
                            .addComponent(txt_dbUsername)
                            .addComponent(txt_dbPassword))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel4)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_dbName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_dbUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_dbPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_dbConnect)
                    .addComponent(btn_dbExit))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btn_dbConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dbConnectActionPerformed
        // TODO add your handling code here:
 
        
        String dbName = txt_dbName.getText();
        String dbUsername = txt_dbUsername.getText();
        String dbPassword = new String(txt_dbPassword.getPassword());
        
        if(dbName.equals("") || dbUsername.equals("") || dbPassword.equals("")){
            msg("Không để trống ô");
        } else if(dbName.contains(",") || dbUsername.contains(",") || dbPassword.contains(",")){
            msg("Dữ liệu nhập không hợp lệ");
        } else if(dbPassword.substring(0, 1).equals(" ") || dbPassword.substring(dbPassword.length()-1, dbPassword.length()).equals(" ")){
            msg("Mật khẩu không được bắt đầu hoặc kết thúc bằng khoảng trắng");
        } else {
            try {
                FileOutputStream fos = new FileOutputStream(new File("project.dat").getAbsolutePath());
                fos.write(getEncrypted(dbName.trim()+','+dbUsername.trim()+','+dbPassword));
                fos.close();
                msg_info("Hoàn tất nhập cấu hình, bắt đầu kết nối...");
                
                
                if(!init_dbConfig()){
                    msg("Không kết nối được SQL Server, xin kiểm tra lại cấu hình");
                }
                
                initts();
                new view.DangNhap().setVisible(true);
            } catch (HeadlessException | IOException | NoSuchAlgorithmException | NoSuchPaddingException 
                    | InvalidKeyException | IllegalBlockSizeException | BadPaddingException | NullPointerException  e)  {
                
                System.out.println(e);
                msg("Không kết nối được SQL Server, xin kiểm tra lại cấu hình!");
            }
        }
        
    }//GEN-LAST:event_btn_dbConnectActionPerformed

    private void btn_dbExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dbExitActionPerformed
        // TODO add your handling code here:
        int exit = JOptionPane.showConfirmDialog(this, "Bạn có muốn thoát không?", "Thông báo", JOptionPane.YES_NO_OPTION);
        if (exit == JOptionPane.YES_OPTION){
            System.exit(0); 
        }
    }//GEN-LAST:event_btn_dbExitActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Config_db.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Config_db.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Config_db.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Config_db.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Config_db().setVisible(true);
            }
        });
    }
    
    public void msg(String text){
        JLabel label = new JLabel(text);
        label.setFont(new Font("Dialog", Font.PLAIN, 18));
        JOptionPane.showMessageDialog(this,label,"Thông báo",JOptionPane.WARNING_MESSAGE);
    }

    public void msg_info(String text){
        JLabel label = new JLabel(text);
        label.setFont(new Font("Dialog", Font.PLAIN, 16));
        JOptionPane.showMessageDialog(this,label,"Thông báo",JOptionPane.INFORMATION_MESSAGE);
    }
    
    public void initts(){
        new Thread(new Runnable() {
            @Override
            public void run() {
                setVisible(false);
                dispose();
            }
        }::run).start();
    }
    
    public boolean init_dbConfig(){
        try {
            FileInputStream fis = new FileInputStream(new File("project.dat").getAbsolutePath());
            ByteArrayOutputStream buffer = new ByteArrayOutputStream();
            int nRead;
            byte[] data = new byte[16384];
            while ((nRead = fis.read(data, 0, data.length)) != -1) buffer.write(data, 0, nRead);
            
            set_dbConfig(getDecrypted(buffer.toByteArray()));
            fis.close();
            buffer.close();
            
            Connection connection = DBUtils.getConnection();
            connection.prepareStatement("select * from NhanVien").executeQuery();
            
        } catch (FileNotFoundException | NullPointerException | SQLException e1) {
            return false;
            
        } catch (IOException | NoSuchAlgorithmException | NoSuchPaddingException | InvalidKeyException 
                | IllegalBlockSizeException | BadPaddingException e2) {
            System.out.println("Error2: " + e2);
        }
        return true;
    }
    
        
    
    public byte[] getEncrypted(String original) throws NoSuchAlgorithmException, NoSuchPaddingException,
            InvalidKeyException, IllegalBlockSizeException, BadPaddingException {
        Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5PADDING");
        cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec("@McQfTjWnZq4t7w!".getBytes(), "AES"));
        return cipher.doFinal(original.getBytes());
    }
    
    public String getDecrypted(byte[] byteEncrypted) throws NoSuchAlgorithmException, NoSuchPaddingException,
            InvalidKeyException, IllegalBlockSizeException, BadPaddingException{
        Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5PADDING");
        cipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec("@McQfTjWnZq4t7w!".getBytes(), "AES"));
        byte[] byteDecrypted = cipher.doFinal(byteEncrypted);
        return new String(byteDecrypted);
    }

    public void set_dbConfig(String dbConfig){
        DBUtils.setDbName(dbConfig.substring(0, dbConfig.indexOf(",")));
        DBUtils.setDbUser(dbConfig.substring(dbConfig.indexOf(",")+1, dbConfig.lastIndexOf(",")));
        DBUtils.setDbPass(dbConfig.substring(dbConfig.lastIndexOf(",")+1, dbConfig.length()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_dbConnect;
    private javax.swing.JButton btn_dbExit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txt_dbName;
    private javax.swing.JPasswordField txt_dbPassword;
    private javax.swing.JTextField txt_dbUsername;
    // End of variables declaration//GEN-END:variables

}
