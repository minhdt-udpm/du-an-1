
package view;

import dao.NhaPhanPhoiDAO;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;
import model.KhachHang;
import model.NhaPhanPhoi;

public class Popup_TimKiemNhaPhanPhoi extends javax.swing.JFrame {

    /** Creates new form TimKiemSanPham */
    public Popup_TimKiemNhaPhanPhoi() {
        initComponents();
        setLocationRelativeTo(null);
        setdata();
    }

    public void setdata(){
        setResizable(false);
        modelNhaPhanPhoi.addColumn("Tên Nhà Phân Phối");
        modelNhaPhanPhoi.addColumn("Địa Chỉ");
        modelNhaPhanPhoi.addColumn("Số ĐT");
        modelNhaPhanPhoi.addColumn("Email");
        modelNhaPhanPhoi.addColumn("Ghi Chú");
        
        tbl_NhaPhanPhoi.setModel(modelNhaPhanPhoi);
        tbl_NhaPhanPhoi.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
            indexNhaPhanPhoi = tbl_NhaPhanPhoi.getSelectedRow();
        });
        txt_timKiem.requestFocus();
        listNhaPhanPhoi = nhaPhanPhoiDAO.getList();
        loadModelKhachHang();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_NhaPhanPhoi = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txt_timKiem = new javax.swing.JTextField();
        btn_TimKiem = new javax.swing.JButton();
        btn_chonNPP = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tìm Kiếm theo Tên NPP hoặc số ĐT hoặc Email");

        tbl_NhaPhanPhoi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tên Nhà Phân Phối", "Địa Chỉ", "Số ĐT", "Email"
            }
        ));
        tbl_NhaPhanPhoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_NhaPhanPhoiMouseClicked(evt);
            }
        });
        tbl_NhaPhanPhoi.setDefaultEditor(Object.class, null);
        jScrollPane1.setViewportView(tbl_NhaPhanPhoi);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Nhập:");

        txt_timKiem.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_timKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_timKiemKeyPressed(evt);
            }
        });

        btn_TimKiem.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btn_TimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icon/timkiem.png"))); // NOI18N
        btn_TimKiem.setText("Tìm Kiếm");
        btn_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimKiemActionPerformed(evt);
            }
        });

        btn_chonNPP.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btn_chonNPP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icon/checked.png"))); // NOI18N
        btn_chonNPP.setText("Chọn NPP");
        btn_chonNPP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_chonNPPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_TimKiem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(btn_chonNPP)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_TimKiem)
                    .addComponent(btn_chonNPP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_timKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_timKiemKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            timKiem();
        }
    }//GEN-LAST:event_txt_timKiemKeyPressed

    private void btn_TimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimKiemActionPerformed
        // TODO add your handling code here:
        timKiem();
    }//GEN-LAST:event_btn_TimKiemActionPerformed

    private void btn_chonNPPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_chonNPPActionPerformed
        // TODO add your handling code here:
        if(indexNhaPhanPhoi>=0){
            chonNPP();
            
        } else {
            JOptionPane.showMessageDialog(this, "Chưa chọn SP");
        }
    }//GEN-LAST:event_btn_chonNPPActionPerformed

    private void tbl_NhaPhanPhoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_NhaPhanPhoiMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            chonNPP();
        }
    }//GEN-LAST:event_tbl_NhaPhanPhoiMouseClicked

    private void chonNPP() {
        Panel_PhieuNhap.txt_tenNhaPhanPhoi.setText(tbl_NhaPhanPhoi.getValueAt(indexNhaPhanPhoi, 0).toString());
        Panel_PhieuNhap.txt_soDienThoai.setText(tbl_NhaPhanPhoi.getValueAt(indexNhaPhanPhoi, 1).toString());
        Panel_PhieuNhap.txt_diaChi.setText(tbl_NhaPhanPhoi.getValueAt(indexNhaPhanPhoi, 2).toString());
        Panel_PhieuNhap.txt_email.setText(tbl_NhaPhanPhoi.getValueAt(indexNhaPhanPhoi, 3).toString());
        Panel_PhieuNhap.maNhaPhanPhoi = listNhaPhanPhoi.get(indexNhaPhanPhoi).getMaNhaPhanPhoi();
        
        setVisible(false);
        dispose();
    }
    
    private void timKiem(){
        String text = txt_timKiem.getText().trim();
        if(text.isEmpty()){
            JOptionPane.showMessageDialog(this, "Chưa nhập thông tin Nhà Phân Phối");
            
        } else {
            listNhaPhanPhoi = nhaPhanPhoiDAO.timKiem(text);
            loadModelKhachHang();
        }
    }
    
    private void loadModelKhachHang() {
        modelNhaPhanPhoi.setRowCount(0);
        listNhaPhanPhoi.forEach(nhaPhanPhoi -> {
            Vector row = new Vector();
            row.add(nhaPhanPhoi.getTenNhaPhanPhoi());
            row.add(nhaPhanPhoi.getDiaChi());
            row.add(nhaPhanPhoi.getSoDienThoai());
            row.add(nhaPhanPhoi.getEmail());
            modelNhaPhanPhoi.addRow(row);
        });

        try {
            if (modelNhaPhanPhoi.getRowCount() > 0) {
                tbl_NhaPhanPhoi.setRowSelectionInterval(0, 0);
            }
        } catch (Exception e) {}
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Popup_TimKiemNhaPhanPhoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Popup_TimKiemNhaPhanPhoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Popup_TimKiemNhaPhanPhoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Popup_TimKiemNhaPhanPhoi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Popup_TimKiemNhaPhanPhoi().setVisible(true);
            }
        });
    }

    DefaultTableModel modelNhaPhanPhoi = new DefaultTableModel();
    
    List<NhaPhanPhoi> listNhaPhanPhoi = new ArrayList<>();
    
    NhaPhanPhoiDAO nhaPhanPhoiDAO = new NhaPhanPhoiDAO();
    
    int indexNhaPhanPhoi = -1;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_TimKiem;
    private javax.swing.JButton btn_chonNPP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_NhaPhanPhoi;
    private javax.swing.JTextField txt_timKiem;
    // End of variables declaration//GEN-END:variables

}
